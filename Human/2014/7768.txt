Hybrid Communication Architecture HCA

The beginning of the 21st century has seen many projects on distributed hash tables, both research and commercial. One of their aims has been to replace the first generation of file sharing software with scalable peer-to-peer architectures. On other fronts, the same techniques are applied, for example, to content delivery networks, streaming networks, cooperative caches, distributed file systems, and grid computing architectures for scientific use. This trend has emerged because with cooperative peers it is possible to asymptotically enhance the use of resouces in sharing of data compared to the basic client-server architecture.
  The need for distribution of data is wide and one could argue that it is as fundamental a building block as the message passing of the Internet. As an answer to this need a new scalable architecture is introduced: Hybrid Communication Architecture (HCA), which provides both data sharing and message passing as communication primitives for applications. HCA can be regarded as an abstraction layer for communication which is further encapsulated by a higher-level middleware. HCA is aimed at general use, and it is not designed for any particular application. One key idea is to combine data sharing with streaming since together they enable many applications not easily implementable with only one of these features. For example, a game application could share the game world state between clients and modify it by using streaming. The other distinctive feature of the system is the use of knowledge of the physical network topology in the optimization of the communication. With a feasible business model, fault-tolerance, and security features, HCA is aimed eventually for real-life adoption.
  This thesis presents the specification of the C++ client interface of HCA and the architecture and protocol of the distributed nodes forming the implementation.
