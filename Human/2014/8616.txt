BSP Sorting: An experimental Study

The Bulk-Synchronous Parallel model of computation has been used for the architecture independent design and analysis of parallel algorithms whose performance is expressed not only in terms of problem size n but also in terms of parallel machine properties. In this paper the performance of implementations of deterministic and randomized BSP sorting algorithms is examined. The deterministic algorithm uses deterministic regular oversampling and parallel sample sorting and is augmented to handle duplicate keys transparently with optimal asymptotic efficiency. The randomized algorithm is sample-sort based and uses oversampling and the ideas introduced with the deterministic algorithm. The resulting randomized design, however, works differently from traditional parallel sample-sort based algorithms and is also augmented to transparently handle duplicate keys with optimal asymptotic efficiency thus eliminating the need to tag all input keys and to double communication/computation time. Both algorithms are shown to balance the work-load evenly among the processors and the use and precise tuning of oversampling that the BSP analysis allows combined with the transparent duplicate-key handling insures regular and balanced communication.
