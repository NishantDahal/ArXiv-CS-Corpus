Measuring Cost of Quality (CoQ) on SDLC Projects is Indispensible for Effective Software Quality Assurance

It is well known fact that was phrased by famous quality scholar P.B. Crosby that it is always cheaper to do the job right the first time. However, this statement must be reconsidered with respect to software development projects, because the concept of quality and associated costs measurements in software engineering discipline is not as matured as in manufacturing and other fields of the industry. Post delivery defects (i.e. software bugs) are very common and integral part of software industry. While the process of measuring and classifying quality cost components is visible, obvious and institutionalized in manufacturing industry, it is still evolving in software industry. In addition to this, the recommendations of British standard BS-6143-2:1990 for classifying quality-related costs into prevention costs, appraisal costs, and failure costs have been successfully adopted by many industries, by identifying the activities carried out within each of these categories, and measuring the costs connected with them, software industry has a long-way to go to have the same level of adoption and institutionalization of cost of quality measurements and visibility. Cost of Quality for software isn't the price of creating a quality software product or IT-service. It's actually the cost of NOT creating a quality software product or IT-service. The chronic affliction of majority of software development projects that are frequently found bleeding with cost overruns, schedule slippage, scope creep and poor quality of deliverables in the global IT industry, was the trigger for this research work. Lessons learnt from this study offer valuable prescriptive guidance for small and medium software businesses, who can benefit from this study by applying the same for their quality improvement initiatives using CoQ-metric, to enhance the capability and maturity of their SDLC-project performance.
