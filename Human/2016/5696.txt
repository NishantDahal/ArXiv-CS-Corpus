Proceedings 6th Workshop on Mathematically Structured Functional Programming

The sixth workshop on Mathematically Structured Functional Programming is devoted to the derivation of functionality from structure. It is a celebration of the direct impact of Theoretical Computer Science on programs as we write them today. Modern programming languages, and in particular functional languages, support the direct expression of mathematical structures, equipping programmers with tools of remarkable power and abstraction. Where would Haskell be without monads? Functional reactive programming without arrows? Call-by-push-value without adjunctions? The list goes on. This workshop is a forum for researchers who seek to reflect mathematical phenomena in data and control.
  The sixth workshop on Mathematically Structured Functional Programming was held on 8th April 2016 as a part of ETAPS 2016 in Eindhoven, the Netherlands. There were five contributed talks and one invited talk.
