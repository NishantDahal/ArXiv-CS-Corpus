Self-Contained Cross-Cutting Pipeline Software Architecture

Layered software architecture contains several intra-layer and inter-layer dependencies. Each layer depends on shared components making it difficult to release a code change, bug fix or feature without exhaustive testing and having to build the entire software code base. This paper proposed self-contained, cross-cutting pipeline architecture (SCPA) that is independent of existing layers. We chose 2 open source projects and 3 internal intern projects that used n-tier architecture and applied the SCPA to release subsequent feature additions and any bug fixes. The SCPA decreased the release time by 42.99%. The lines of delivered code (LOC), increased by 22.58%. The number of defects found in existing functionality decreased by 85.54%. The SCPA also provided ability to roll back or switch off the new feature quickly. SCPA proved a suitable architecture for agile software development and continuous deployment.
