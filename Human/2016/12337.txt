Experience: Type alignment on DBpedia and Freebase

Linked Open Data exhibits growth in both volume and variety of published data. Due to this variety, instances of many different types (e.g. Person) can be found in published datasets. Type alignment is the problem of automatically matching types (in a possibly many-many fashion) between two such datasets. Type alignment is an important preprocessing step in instance matching. Instance matching concerns identifying pairs of instances referring to the same underlying entity. By performing type alignment a priori, only instances conforming to aligned types are processed together, leading to significant savings. This article describes a type alignment experience with two large-scale cross-domain RDF knowledge graphs, DBpedia and Freebase, that contain hundreds, or even thousands, of unique types. Specifically, we present a MapReduce-based type alignment algorithm and show that there are at least three reasonable ways of evaluating type alignment within the larger context of instance matching. We comment on the consistency of those results, and note some general observations for researchers evaluating similar algorithms on cross-domain graphs.
