A Memristor Crossbar-Based Computation Scheme with High Precision

The memristor is promising to be the basic cell of next-generation computation systems. Compared to the traditional MOSFET device, the memristor is efficient over energy and area. But one of the biggest challenges faced with researchers is how to program a memristor's resistance precisely. Recently, an algorithm designed to save 8 valid bits in each memristor is proposed, but this is still not sufficient for precise computation. In this paper, we propose a crossbar-based memristor computation scheme supporting precise computations whose operands have 32 valid bits. As a brief introduction, in a multiplication with two operands, one operand is programmed as input signal, and the other operand is saved into a so-called crossbar structure, which contains a group of memristors, and each memristor saves several valid bits, usually one or two bits only. The computation results,i.e. the multiplication of the two operands, are contained in the outputs of the crossbar structure together with noise. Analog-to-Digital Converters (ADCs) are then used to extract the valid bits, which are the most significant bits of outputs. These valid bits can be combined together with Digital-to-Analog Converters(DACs) to get the final results. What's more, the precision of this computation scheme can be adjusted according to the definition of the user, 32 valid bits at most, so it is qualified for different application contexts.
