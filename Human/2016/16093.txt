Generating Candidate Busy Beaver Machines (Or How to Build the Zany Zoo)

The busy beaver problem is a well-known example of a non-computable function. In order to determine a particular value of this function, it is necessary to generate and classify a large number of Turing machines. Previous work on this problem has described the processes used for the generation and classification of these machines, but unfortunately has generally not provided details of the machines considered. While there is no reason to doubt the veracity of the results known so far, it is difficult to accept such results as scientifically proven without being able to inspect the appropriate evidence. In addition, a list of machines and their classifications can be used for other results, such as variations on the busy beaver problem and related problems such as the placid platypus problem. In this paper we investigate how to generate classes of machines to be considered for the busy beaver problem. We discuss the relationship between quadruple and quintuple variants of Turing machines, and show that the latter are more general than the former. We give some formal results to justify our strategy for minimising the number of machines generated, and define a process reflecting this strategy for generating machines. We describe our implementation, and the results of generating various classes of machines with up to 5 states or up to 5 symbols, all of which (together with our code) are available on the author's website.
