Locally Repairable Regenerating Codes: Node Unavailability and the Insufficiency of Stationary Local Repair

Locally repairable codes (LRCs) are ingeniously designed distributed storage codes with a (usually small) fixed set of helper nodes participating in repair. Since most existing LRCs assume exact repair and allow full exchange of the stored data ($β=α$) from the helper nodes, they can be viewed as a generalization of the traditional erasure codes (ECs) with a much desired feature of local repairability via predetermined sets of helpers. However, it also means that they lack the features of (i) functional repair, and (ii) partial information-exchange ($β<α$) in the original regenerating codes (RCs), which could further reduce the repair bandwidth. Motivated by the significant bandwidth reduction of RCs over ECs, existing works by Ahmad et al and by Hollmann studied the concept of "locally repairable regenerating codes (LRRCs)" that successfully combine functional repair and partial information exchange of regenerating codes with the much-desired local repairability feature of LRC. The resulting LRRCs demonstrate significant bandwidth reduction.
  One important issue that needs to be addressed by any local repair schemes (including both LRCs and LRRCs) is that sometimes designated helper nodes may be temporarily unavailable, the result of multiple failures, degraded reads, or other network dynamics. Under the setting of LRRCs with temporary node unavailability, this work studies the impact of different helper selection methods. It proves that with node unavailability, all existing methods of helper selection, including those used in RCs and LRCs, can be insufficient in terms of achieving the optimal repair-bandwidth. For some scenarios, it is necessary to combine LRRCs with a new helper selection method, termed dynamic helper selection, to achieve optimal repair bandwidth. This work also compares the performance of different helper selection methods and answers...
