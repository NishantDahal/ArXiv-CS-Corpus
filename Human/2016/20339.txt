Cost-efficient Scheduling on Machines from the Cloud

We consider a scheduling problem where machines need to be rented from the cloud in order to process jobs. There are two types of machines available which can be rented for machine-type dependent prices and for arbitrary durations. However, a machine-type dependent setup time is required before a machine is available for processing. Jobs arrive online over time, have machine-type dependent sizes and have individual deadlines. The objective is to rent machines and schedule jobs so as to meet all deadlines while minimizing the rental cost.
  Since we observe the slack of jobs to have a fundamental influence on the competitiveness, we study the model when instances are parameterized by their (minimum) slack. An instance is called to have a slack of $β$ if, for all jobs, the difference between the job's release time and the latest point in time at which it needs to be started is at least $β$. While for $β< s$ no finite competitiveness is possible, our main result is an $O(\frac{c}{\varepsilon} + \frac{1}{\varepsilon^3})$-competitive online algorithm for $β= (1+\varepsilon)s$ with $\frac{1}{s} \leq \varepsilon \leq 1$, where $s$ and $c$ denotes the largest setup time and the cost ratio of the machine-types, respectively. It is complemented by a lower bound of $Ω(\frac{c}{\varepsilon})$.
