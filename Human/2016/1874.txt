Reduced Complexity Multi-Scale Path-Planning on Probabilistic Maps

We present several modifications to the previously proposed MSPP algorithm that can speed-up its execution considerably. The MSPP algorithm leverages a multiscale representation of the environment in $n$ dimensions. The information of the environment is stored in a tree data structure representing a recursive dyadic partitioning of the search space. The information used by the algorithm is the probability that a node in the tree corresponds to an obstacle in the search space. Such trees are often created from mainstream perception algorithms, and correspond to quadtrees and octrees in two and three dimensions, respectively. We first present a new method to compute the graph neighbors in order to reduce the complexity of each iteration, from $O(| V|^2)$ to $O(| V| \log |V|)$. We then show how to delay expensive intermediate computations until we know that new information will be required, hence saving time by not operating on information that is never used during the search. Finally, we present a way to remove the very expensive need to calculate a full multi-scale map with the use of sampling and derive an theoretical upperbound of the probability of failure as a function of the number of samples.
