Solving Laplacian Systems in Logarithmic Space

We investigate the space complexity of solving linear systems of equations. While all known deterministic or randomized algorithms solving a square system of $n$ linear equations in $n$ variables require $Î©(\log^2 n)$ space, Ta-Shma (STOC 2013) recently showed that on a quantum computer an approximate solution can be computed in logarithmic space, giving the first explicit computational task for which quantum computation seems to outperform classical computation with respect to space complexity. In this paper we show that for systems of linear equations in the Laplacian matrix of graphs, the same logarithmic space complexity can actually be achieved by a classical (i.e., non-quantum) algorithm. More precisely, given a system of linear equations $Lx=b$, where $L$ is the (normalized) Laplacian matrix of a graph on $n$ vertices and $b$ is a unit-norm vector, our algorithm outputs a vector $\tilde x$ such that $\left\lVert\tilde x -x\right\rVert\le 1/\mathrm{poly}(n)$ and uses only $O(\log n)$ space if the underlying graph has polynomially bounded weights. We also show how to estimate, again in logarithmic space, the smallest non-zero eigenvalue of $L$.
