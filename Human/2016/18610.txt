Deterministic Graph Exploration with Advice

We consider the task of graph exploration. An $n$-node graph has unlabeled nodes, and all ports at any node of degree $d$ are arbitrarily numbered $0,\dots, d-1$. A mobile agent has to visit all nodes and stop. The exploration time is the number of edge traversals. We consider the problem of how much knowledge the agent has to have a priori, in order to explore the graph in a given time, using a deterministic algorithm. This a priori information (advice) is provided to the agent by an oracle, in the form of a binary string, whose length is called the size of advice. We consider two types of oracles. The instance oracle knows the entire instance of the exploration problem, i.e., the port-numbered map of the graph and the starting node of the agent in this map. The map oracle knows the port-numbered map of the graph but does not know the starting node of the agent.
  We first consider exploration in polynomial time, and determine the exact minimum size of advice to achieve it. This size is $\log\log\log n -Θ(1)$, for both types of oracles.
  When advice is large, there are two natural time thresholds: $Θ(n^2)$ for a map oracle, and $Θ(n)$ for an instance oracle, that can be achieved with sufficiently large advice. We show that, with a map oracle, time $Θ(n^2)$ cannot be improved in general, regardless of the size of advice. We also show that the smallest size of advice to achieve this time is larger than $n^δ$, for any $δ<1/3$.
  For an instance oracle, advice of size $O(n\log n)$ is enough to achieve time $O(n)$. We show that, with any advice of size $o(n\log n)$, the time of exploration must be at least $n^ε$, for any $ε<2$, and with any advice of size $O(n)$, the time must be $Ω(n^2)$.
  We also investigate minimum advice sufficient for fast exploration of hamiltonian graphs.
