Homonym Population Protocols

The population protocol model was introduced by Angluin \emph{et al.} as a model of passively mobile anonymous finite-state agents. This model computes a predicate on the multiset of their inputs via interactions by pairs. The original population protocol model has been proved to compute only semi-linear predicates and has been recently extended in various ways. In the community protocol model by Guerraoui and Ruppert, agents have unique identifiers but may only store a finite number of the identifiers they already heard about. The community protocol model provides the power of a Turing machine with a $O(n\log n)$ space. We consider variations on the two above models and we obtain a whole landscape that covers and extends already known results. Namely, by considering the case of homonyms, that is to say the case when several agents may share the same identifier, we provide a hierarchy that goes from the case of no identifier (population protocol model) to the case of unique identifiers (community protocol model). We obtain in particular that any Turing Machine on space $O(\log^{O(1)} n)$ can be simulated with at least $O(\log^{O(1)} n)$ identifiers, a result filling a gap left open in all previous studies. Our results also extend and revisit in particular the hierarchy provided by Chatzigiannakis \emph{et al.} on population protocols carrying Turing Machines on limited space, solving the problem of the gap left by this work between per-agent space $o(\log \log n)$ (proved to be equivalent to population protocols) and $O(\log n)$ (proved to be equivalent to Turing machines).
