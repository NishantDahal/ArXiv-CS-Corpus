Relativizing an incompressible number and an incompressible function through subrecursive extensions of Turing machines

We show in this article that uncomputability is also a relative property of subrecursive classes built on a recursive relative incompressible function, which acts as a higher-order "yardstick" of irreducible information for the respective subrecursive class. We define the concept of a Turing submachine, and a recursive relative version for the Busy Beaver function and for the halting probability (or Chaitin's constant) Omega; respectively the Busy Beaver Plus (BBP) function and a time-bounded halting probability. Therefore, we prove that the computable BBP function defined on any Turing submachine is neither computable nor compressible by any program running on this submachine. In addition, we build a Turing submachine that can use lower approximations to its own time-bounded halting probability to calculate the values of its Busy Beaver Plus function, in the "same" manner that universal Turing machines use approximations to Omega to calculate Busy Beaver values. Thus, the algorithmic information carried by the BBP function is relatively incompressible (and uncomputable) at the same time that it still is occasionally reached by submachines. We point that this phenomenon enriches the research on the relativization and simulation of uncomputability and irreducible information.
