Greedy online colouring with buffering

We consider the problem of online graph colouring. Whenever a node is requested, a colour must be assigned to the node, and this colour must be different from the colours of any of its neighbours. According to the greedy algorithm the node is coloured by the colour with the smallest possible $k$.
  The goal is to use as few colours as possible. We propose an algorithm, where the node is coloured not immediately, but only after the collection of next requests stored in the buffer of size $j$. In other words, the first node in the buffer is coloured definitively taking into account all possible colourisations of the remaining nodes in the buffer. If there are $r$ possible corrected colourings, then the one with the probability $1/r$ is chosen. The first coloured node is removed from the buffer to enable the entrance of the next request. A number of colours in a two examples of graphs: crown graphs and Kneser graphs have been analysed.
