Towards an executable semantics of automobile RTOS standard and its application to conformance verification

The automobile Real-Time Operating System (RTOS) is hard to design and implement due to its real time features and increasing complexity. Some automobile RTOS standards are released aiming at unifying the software architecture of vehicle systems. Most of the standards are presented informally in natural languages, which may lead to not only ambiguities in specifications but also difficulties in conformance verification. This paper proposes a rewriting-based approach for formalising the automobile RTOS standard. Taking the OSEK/VDX standard as an example, an executional formal semantics of the automobile RTOS kernel, which focuses on the real time features, is defined using $\mathbb{K}$, a rewriting-based framework. We also report some ambiguous definitions of the OSEK/VDX standard, which we find in the process of formalisation. The $\mathbb{K}$ semantics of the OSEK/VDX standard is applied to conformance verification, which is used to check the conformance of not only the automobile operating system kernel but the applications.
