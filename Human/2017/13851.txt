Dynamic Geodesic Nearest Neighbor Searching in a Simple Polygon

We present an efficient dynamic data structure that supports geodesic nearest neighbor queries for a set of point sites $S$ in a static simple polygon $P$. Our data structure allows us to insert a new site in $S$, delete a site from $S$, and ask for the site in $S$ closest to an arbitrary query point $q \in P$. All distances are measured using the geodesic distance, that is, the length of the shortest path that is completely contained in $P$. Our data structure supports queries in $O(\sqrt{n}\log n\log^2 m)$ time, where $n$ is the number of sites currently in $S$, and $m$ is the number of vertices of $P$, and updates in $O(\sqrt{n}\log^3 m)$ time. The space usage is $O(n\log m + m)$. If only insertions are allowed, we can support queries in worst-case $O(\log^2 n\log^2 m)$ time, while allowing for $O(\log n\log^3 m)$ amortized time insertions. We can achieve the same running times in case there are both insertions and deletions, but the order of these operations is known in advance.
