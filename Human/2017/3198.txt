Reactive Turing Machines with Infinite Alphabets

The notion of Reactive Turing machine (RTM) was proposed as an orthogonal extension of Turing machines with interaction. RTMs are used to define the notion of executable transition system in the same way as Turing machines are used to define the notion of computable function on natural numbers. RTMs inherited finiteness of all sets involved from Turing machines, and as a consequence, in a single step, an RTM can only communicate elements from a finite set of data. Some process calculi, such as the pi-calculus, essentially depend on an infinite alphabet of actions, and hence it immediately follows that transition systems specified in these calculi are not executable. On closer inspection, however, the pi-calculus does not appear to use the infinite data in a non-computable manner.
  In this paper, we investigate several ways to relax the finiteness requirement. We start by considering a variant of RTMs in which all sets are allowed to be countable, and we get a notion of infinitary RTM. Infinitary RTMs are extremely expressive such that we can hardly use them as a expressiveness criterion. Then, we refine the model by adding extra restrictions. As a result, we define a notion of RTM with atoms. It is a more restricted variant of RTMs in which the sets of actions and data symbols are still allowed to be infinite. We propose a notion of of nominal executability based on RTMs with atoms, and show that every effective transition system with atoms is nominally executable. It will follow that processes definable in the pi-calculus are nominally executable. In contrast, in the process specification language mCRL2 it is possible to specify processes that are not nominally executable. Thus, nominal executability provides a new expressiveness criterion for process calculi.
