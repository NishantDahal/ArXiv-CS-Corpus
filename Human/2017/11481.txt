Computational Thinking in Patch

With the future likely to see even more pervasive computation, computational thinking (problem-solving skills incorporating computing knowledge) is now being recognized as a fundamental skill needed by all students. Computational thinking is conceptualizing as opposed to programming, promotes natural human thinking style than algorithmic reasoning, complements and combines mathematical and engineering thinking, and it emphasizes ideas, not artifacts. In this paper, we outline a new visual language, called Patch, using which students are able to express their solutions to eScience computational problems in abstract visual tools. Patch is closer to high level procedural languages such as C++ or Java than Scratch or Snap! but similar to them in ease of use and combines simplicity and expressive power in one single platform.
