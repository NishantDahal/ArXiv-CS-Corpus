Leader Election in Trees with Customized Advice

Leader election is a basic symmetry breaking problem in distributed computing. All nodes of a network have to agree on a single node, called the leader. If the nodes of the network have distinct labels, then agreeing on a single node means that all nodes have to output the label of the elected leader.
  If the nodes are anonymous, the task of leader election is formulated as follows: every node of the network must output a simple path starting at it, which is coded as a sequence of port numbers, such that all these paths end at a common node, the leader. In this paper, we study deterministic leader election in anonymous trees.
  Our goal is to establish tradeoffs between the allocated time $τ$ and the amount of information that has to be given {\em a priori} to the nodes of a network to enable leader election in time $τ$. Following the framework of {\em algorithms with advice}, this information is provided to all nodes at the start by an oracle knowing the entire tree, in form of binary strings assigned to all nodes. There are two possible variants of formulating this advice assignment. Either the strings provided to all nodes are identical, or strings assigned to different nodes may be potentially different, i.e., advice can be {\em customized}. As opposed to previous papers on leader election with advice, in this paper we consider the latter option.
  The maximum length of all assigned binary strings is called the {\em size of advice}.
  For a given time $τ$ allocated to leader election, we give upper and lower bounds on the minimum size of advice sufficient to perform leader election in time $τ$. All our bounds except one pair are tight up to multiplicative constants, and in this one exceptional case, the gap between the upper and the lower bound is very small.
