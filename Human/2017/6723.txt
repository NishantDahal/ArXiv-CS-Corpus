Managing Service-Heterogeneity using Osmotic Computing

Computational resource provisioning that is closer to a user is becoming increasingly important, with a rise in the number of devices making continuous service requests and with the significant recent take up of latency-sensitive applications, such as streaming and real-time data processing. Fog computing provides a solution to such types of applications by bridging the gap between the user and public/private cloud infrastructure via the inclusion of a "fog" layer. Such approach is capable of reducing the overall processing latency, but the issues of redundancy, cost-effectiveness in utilizing such computing infrastructure and handling services on the basis of a difference in their characteristics remain. This difference in characteristics of services because of variations in the requirement of computational resources and processes is termed as service heterogeneity. A potential solution to these issues is the use of Osmotic Computing -- a recently introduced paradigm that allows division of services on the basis of their resource usage, based on parameters such as energy, load, processing time on a data center vs. a network edge resource. Service provisioning can then be divided across different layers of a computational infrastructure, from edge devices, in-transit nodes, and a data center, and supported through an Osmotic software layer. In this paper, a fitness-based Osmosis algorithm is proposed to provide support for osmotic computing by making more effective use of existing Fog server resources. The proposed approach is capable of efficiently distributing and allocating services by following the principle of osmosis. The results are presented using numerical simulations demonstrating gains in terms of lower allocation time and a higher probability of services being handled with high resource utilization.
