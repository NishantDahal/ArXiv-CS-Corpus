The probability of a computable output from a random oracle

Consider a universal Turing machine that produces a partial or total function (or a binary stream), based on the answers to the binary queries that it makes during the computation. We study the probability that the machine will produce a computable function when it is given a random stream of bits as the answers to its queries. Surprisingly, we find that these probabilities are the entire class of real numbers in (0, 1) that can be written as the difference of two halting probabilities relative to the halting problem. In particular, there are universal Turing machines which produce a computable output with probability exactly 1/2. Our results contrast a large array of facts (the most well-known being the randomness of Chaitin's halting probability) which witness maximal initial segment complexity of probabilities associated with universal machines. Our proof uses recent advances in algorithmic randomness.
