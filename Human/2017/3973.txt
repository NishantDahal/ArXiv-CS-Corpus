Speeding up TestU01 with the use of HTCondor

Testing random number generators is a very important task that, in the resent past, has taken upwards of twelve hours when testing with the current agship testing suite TestU01. Through this paper we will discuss the possible performance increases to the existing random number generator testing suite TestU01 that are available by offering the executable to an HTCondor pool to execute on. We will see that with a few modifications we are able to decrease the running time of a sample run of Big Crush from about five and a half hours to only five and a half minutes. We will also see that not only the time taken for the testing to complete is shortened, but also the amount of time the user is unable to use their testing computer is reduced to almost none. Additionally, during this paper we will look at the standard implementation of TestU01 and how it compares with a preexisting Parallel version of TestU01. We will be comparing the performance of the standard version of TestU01 with the parallel version so that we have a performance baseline to test our own modifications against. Finally, this paper will also discuss the use of the distributed computing system HTCondor, and cover some basic instructions related to setting up and using HTCondor. HTCondor is already known to increase the performance of a networked group of computers by allowing super users to utilize additional resources from other lesser users idle workstation. We will relate the model recommended for HTCondor to a standard computer lab found at a University and explain why they are the perfect candidates for the system.
