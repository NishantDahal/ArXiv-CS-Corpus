Encoding Watermark Numbers as Reducible Permutation Graphs using Self-inverting Permutations

Several graph theoretic watermark methods have been proposed to encode numbers as graph structures in software watermarking environments. In this paper, we propose an efficient and easily implementable codec system for encoding watermark numbers as reducible permutation flow-graphs and, thus, we extend the class of graphs used in such a watermarking environment. More precisely, we present an algorithm for encoding a watermark number $w$ as a self-inverting permutation $π^*$, an algorithm for encoding the self-inverting permutation $π^*$ into a reducible permutation graph $F[π^*]$ whose structure resembles the structure of real program graphs, as well as decoding algorithms which extract the permutation $π^*$ from the reducible permutation graph $F[π^*]$ and the number $w$ from $π^*$. Both the encoding and the decoding process takes time and space linear in the length of the binary representation of $w$. The two main components of our proposed codec system, i.e., the self-inverting permutation $π^*$ and the reducible permutation graph $F[π^*]$, incorporate the binary representation of the watermark~$w$ in their structure and possess important structural properties, which make our system resilient to attacks; to this end, we experimentally evaluated our system under edge modification attacks on the graph $F[π^*]$ and the results show that we can detect such attacks with high probability.
