Computing in the Limit

We define a class of functions termed "Computable in the Limit", based on the Machine Learning paradigm of "Identification in the Limit". A function is Computable in the Limit if it defines a property P_p of a recursively enumerable class A of recursively enumerable data sequences S in A, such that each data sequence S is generated by a total recursive function s that enumerates . Let the index s represent the data sequence S. The property P_p(s)=x is computed by a partial recursive function f_p(s,t) such that there exists a u where f_p(s,u)=x and for all t>=u, f_p(s,t)=x if it converges. Since the index s is known, this is not an identification problem - instead it is computing a common property of the sequences in A. We give a Normal Form Theorem for properties that are Computable in the Limit, similar to Kleene's Normal Form Theorem. We also give some examples of sets that are Computable in the Limit, and derive some properties of Canonical and Complexity Bound Enumerations of classes of total functions, and show that no full enumeration of all indices of Turing machines TM_i that compute a given total function can be Computable in the Limit.
