Multiset Combinatorial Batch Codes

Batch codes, first introduced by Ishai, Kushilevitz, Ostrovsky, and Sahai, mimic a distributed storage of a set of $n$ data items on $m$ servers, in such a way that any batch of $k$ data items can be retrieved by reading at most some $t$ symbols from each server. Combinatorial batch codes, are replication-based batch codes in which each server stores a subset of the data items.
  In this paper, we propose a generalization of combinatorial batch codes, called multiset combinatorial batch codes (MCBC), in which $n$ data items are stored in $m$ servers, such that any multiset request of $k$ items, where any item is requested at most $r$ times, can be retrieved by reading at most $t$ items from each server. The setup of this new family of codes is motivated by recent work on codes which enable high availability and parallel reads in distributed storage systems. The main problem under this paradigm is to minimize the number of items stored in the servers, given the values of $n,m,k,r,t$, which is denoted by $N(n,k,m,t;r)$. We first give a necessary and sufficient condition for the existence of MCBCs. Then, we present several bounds on $N(n,k,m,t;r)$ and constructions of MCBCs. In particular, we determine the value of $N(n,k,m,1;r)$ for any $n\geq \left\lfloor\frac{k-1}{r}\right\rfloor{m\choose k-1}-(m-k+1)A(m,4,k-2)$, where $A(m,4,k-2)$ is the maximum size of a binary constant weight code of length $m$, distance four and weight $k-2$. We also determine the exact value of $N(n,k,m,1;r)$ when $r\in\{k,k-1\}$ or $k=m$.
