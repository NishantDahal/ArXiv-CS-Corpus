On the Computational Complexity of Variants of Combinatorial Voter Control in Elections

Voter control problems model situations in which an external agent tries toaffect the result of an election by adding or deleting the fewest number of voters. The goal of the agent is to make a specific candidate either win (\emph{constructive} control) or lose (\emph{destructive} control) the election. We study the constructive and destructive voter control problems whenadding and deleting voters have a \emph{combinatorial flavor}: If we add (resp.\ delete) a voter~$v$, we also add (resp.\ delete) a bundle~$κ(v) $ of voters that are associated with~$v$. While the bundle~$κ(v)$ may have more than one voter, a voter may also be associated with more than one voter. We analyze the computational complexity of the four voter control problems for the Plurality rule. We obtain that, in general, making a candidate lose is computationally easier than making her win. In particular, if the bundling relation is symmetric (i.e.\ $\forall w\colon w \in κ(v) \Leftrightarrow v \in κ(w) $), and if each voter has at most two voters associated with him, then destructive control is polynomial-time solvable while the constructive variant remains $\NP$-hard. Even if the bundles are disjoint (i.e.\ $\forall w\colon w \in κ(v) \Leftrightarrow κ(v) = κ(w) $), the constructive problem variants remain intractable. Finally, the minimization variant of constructive control by adding voters does not admit an efficient approximation algorithm, unless P=NP.
