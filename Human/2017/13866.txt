No-idle, no-wait: when shop scheduling meets dominoes, eulerian and hamiltonian paths

In shop scheduling, several applications exist where it is required that some components perform consecutively. We refer to no-idle schedules if machines are required to operate with no inserted idle time and no-wait schedules if tasks cannot wait between the end of an operation and the start of the following one. We consider here no-idle/no-wait shop scheduling problems with makespan as performance measure and determine related complexity results. We first analyze the two-machine no-idle/no-wait flow shop problem and show that it is equivalent to a special version of the game of dominoes which is polynomially solvable by tackling an Eulerian path problem on a directed graph. We present for this problem an O(n) exact algorithm. As a byproduct we show that the Hamiltonian Path problem on a digraph G(V,A) with a special structure (where every pair of vertices i,j either has all successors in common or has no common successors) reduces to the two-machine no-idle/no-wait flow shop problem. Correspondingly, we provide a new polynomially solvable special case of the Hamiltonian Path problem. Then, we show that also the corresponding $m$-machine no-idle no-wait flow shop problem is polynomially solvable and provide an O(mn log n) exact algorithm. Finally we prove that the 2-machine no-idle/no-wait job shop problem and the 2-machine no-idle/no-wait open shop problem are NP-Hard in the strong sense.
