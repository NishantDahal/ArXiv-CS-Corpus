P = NP

The present work proves that P=NP. The proof, presented in this work, is a constructive one: the program of a polynomial time deterministic multi-tape Turing machine M_ExistsAcceptingPath, that determines if there exists an accepting computational path of a polynomial time non-deterministic single-tape Turing machine M_NP, is constructed (machine M_ExistsAcceptingPath is different for each Turing machine M_NP). Machine M_ExistsAcceptingPath is based on reduction to problem LP (linear programming) instead of reduction to problem 3-CNF-SAT which is commonly used. In more detail, machine M_AcceptingPath uses a reduction of the initial string problem to another string problem TCPE (defined in the paper) that is NP-complete and decidable in polynomial time. The time complexity of machine M_ExistsAcceptingPath is O(t(n)^{272}) wherein t(n) is an upper bound of the time complexity of machine M_NP.
