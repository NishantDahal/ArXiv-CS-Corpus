Synchronization in Dynamic Networks

In this article, we study algorithms for dynamic networks with asynchronous start, i.e., each node may start running the algorithm in a different round. Inactive nodes transmit only heartbeats, which contain no information but can be detected by active nodes. We make no assumption on the way the nodes are awakened, except that for each node u there is a time $s_u$ in which it is awakened and starts to run the algorithm. The identities of the nodes are not mutually known, and the network size is unknown as well.
  We present synchronization algorithms, which guarantee that after a finite number of rounds, all nodes hold the same round number, which is incremented by one each round thereafter. We study the time complexity and message size required for synchronization, and specifically for simultaneous synchronization, in which all nodes synchronize their round numbers at exactly the same round.
  We show that there is a strong relation between the complexity of simultaneous synchronization and the connectivity of the dynamic graphs: With high connectivity which guarantees that messages can be broadcasted in a constant number of rounds, simultaneous synchronization by all nodes can be obtained by a deterministic algorithm within a constant number of rounds, and with messages of constant size. With a weaker connectivity, which only guarantees that the broadcast time is proportional to the network size, our algorithms still achieve simultaneous synchronization, but within linear time and long messages.
  We also discuss how information on the network size and randomization may improve synchronization algorithms, and show related impossibility results.
