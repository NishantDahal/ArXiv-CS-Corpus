Sophistication vs Logical Depth

Sophistication and logical depth are two measures that express how complicated the structure in a string is. Sophistication is defined as the minimal complexity of a computable function that defines a two-part description for the string that is shortest within some precision; the second can be defined as the minimal computation time of a program that is shortest within some precision. We show that the Busy Beaver function of the sophistication of a string exceeds its logical depth with logarithmically bigger precision, and that logical depth exceeds the Busy Beaver function of sophistication with logarithmically bigger precision. We also show that this is not true if the precision is only increased by a constant (when the notions are defined with plain Kolmogorov complexity). Finally we show that sophistication is unstable in its precision: constant variations can change its value by a linear term in the length of the string.
