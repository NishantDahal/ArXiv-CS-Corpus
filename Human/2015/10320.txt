Optimal Aggregation of Blocks into Subproblems in Linear-Programs with Block-Diagonal-Structure

Wall-clock-time is minimized for a solution to a linear-program with block-diagonal-structure, by decomposing the linear-program into as many small-sized subproblems as possible, each block resulting in a separate subproblem, when the number of available parallel-processing-units is at least equal to the number of blocks. This is not necessarily the case when the parallel processing capability is limited, causing multiple subproblems to be serially solved on the same processing-unit. In such a situation, it might be better to aggregate blocks into larger sized subproblems. The optimal aggregation strategy depends on the computing-platform used, and minimizes the average-case running time for the set of subproblems. We show that optimal aggregation is NP-hard when blocks are of unequal size, and that optimal aggregation can be achieved within polynomial-time when blocks are of equal size.
