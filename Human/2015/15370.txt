A Design of Endurance Queue for Co-Existing Systems in Multi-Programmed Environments

These days enterprise applications try to integrate online processing and batch jobs into a common software stack for seamless monitoring and driverless operations. Continuous integration of these systems results in choking of the poorly performing sub-systems, when the service demand and throughput are not synchronized. A poorly performing sub-system may become a serious performance bottleneck for the entire system if its serviceability and the capacity is over utilized by increased service demand from upstream systems. From all the integrated sub-systems, queuing systems are majorly categorized as choking elements due to their limited service length and lack of processing details. The situation becomes more pronounced in multiprogramming environments where the queue performance exponentially degrades with increased degree of multiprogramming at upstream levels. This paper presents an approach to compute the queue length and devise a distribution model such that the queue length is dynamically adjusted depending on the sudden growth or decline of transmission packets. The idea is to design a heat map of the memory and correlate it with the queue length distribution. With each degree of multi-programmability, the data processing logic is adjusted by the distribution model to arrive at an endurance level queue for long term service under variable load conditions. It will take away the current implementation of using delayed processing logic and/or batch processing of data at downstream systems.
