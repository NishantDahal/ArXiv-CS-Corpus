Towards non-threaded Concurrent Constraint Programming for implementing multimedia interaction systems

In this work we explain the implementation of event-driven real-time interpreters for the Concurrent Constraint Programming (CCP) and Non-deterministic Timed Concurrent Constraint (NTCC) for- malisms. The CCP interpreter was tested with a program to find, concurrently, paths in a graph and it will be used in the future to find musical sequences in the music improvisation software Omax, developed by the French Acoustics/Music Research Institute (IRCAM). In the other hand, the NTCC interpreter was tested with a music improvisation system based on NTCC (CCFOMI), developed by the AVISPA research group and IRCAM. Additionally, we present GECOL 2, a wrapper for the Generic Constraints Development Environment (GECODE) to Common LISP, de- veloped to port the interpreters to Common LISP in the future. We concluded that using GECODE for the concurrency control avoids the need of having threads and synchronizing them, leading to a simple and efficient implementation of CCP and NTCC. We also noticed that the time units in NTCC interpreter do not represent discrete time units, because when we simulate the NTCC specifications in the interpreter, the time units have different durations. In the future, we propose forcing the duration of each time unit to a fix time, that way we would be able to reason about NTCC time units as we do with discrete time units.
