Generating Binary Optimal Codes Using Heterogeneous Parallel Computing

Generation of optimal codes is a well known problem in coding theory. Many computational approaches exist in the literature for finding record breaking codes. However generating codes with long lengths $n$ using serial algorithms is computationally very expensive, for example the worst case time complexity of a Greedy algorithm is $\mathcal{O}(n\; 4^n)$. In order to improve the efficiency of generating codes with long lengths, we propose and investigate some parallel algorithms using General Purpose Graphic Processing Units (GPGPU). This paper considers the implementation of parallel Greedy algorithm using GPGPU-CUDA (Computed Unified Device Architecture) framework and discusses various optimization techniques to accelerate the GPU code. The performance achieved for optimized parallel implementations is more than two to three orders of magnitude faster than that of serial implementation and shows a great potential of GPGPU in the field of coding theory applications.
