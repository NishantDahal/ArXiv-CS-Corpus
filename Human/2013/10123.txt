On Logical Depth and the Running Time of Shortest Programs

The logical depth with significance $b$ of a finite binary string $x$ is the shortest running time of a binary program for $x$ that can be compressed by at most $b$ bits. There is another definition of logical depth. We give two theorems about the quantitative relation between these versions: the first theorem concerns a variation of a known fact with a new proof, the second theorem and its proof are new. We select the above version of logical depth and show the following. There is an infinite sequence of strings of increasing length such that for each $j$ there is a $b$ such that the logical depth of the $j$th string as a function of $j$ is incomputable (it rises faster than any computable function) but with $b$ replaced by $b+1$ the resuling function is computable. Hence the maximal gap between the logical depths resulting from incrementing appropriate $b$'s by 1 rises faster than any computable function. All functions mentioned are upper bounded by the Busy Beaver function. Since for every string its logical depth is nonincreasing in $b$, the minimal computation time of the shortest programs for the sequence of strings as a function of $j$ rises faster than any computable function but not so fast as the Busy Beaver function.
