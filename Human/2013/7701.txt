Representing Boolean Functions Using Polynomials: More Can Offer Less

Polynomial threshold gates are basic processing units of an artificial neural network. When the input vectors are binary vectors, these gates correspond to Boolean functions and can be analyzed via their polynomial representations. In practical applications, it is desirable to find a polynomial representation with the smallest number of terms possible, in order to use the least possible number of input lines to the unit under consideration. For this purpose, instead of an exact polynomial representation, usually the sign representation of a Boolean function is considered. The non-uniqueness of the sign representation allows the possibility for using a smaller number of monomials by solving a minimization problem. This minimization problem is combinatorial in nature, and so far the best known deterministic algorithm claims the use of at most $0.75\times 2^n$ of the $2^n$ total possible monomials. In this paper, the basic methods of representing a Boolean function by polynomials are examined, and an alternative approach to this problem is proposed. It is shown that it is possible to use at most $0.5\times 2^n = 2^{n-1}$ monomials based on the $\{0, 1\}$ binary inputs by introducing extra variables, and at the same time keeping the degree upper bound at $n$. An algorithm for further reduction of the number of terms that used in a polynomial representation is provided. Examples show that in certain applications, the improvement achieved by the proposed method over the existing methods is significant.
