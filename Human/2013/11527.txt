Systems Variability Modeling: A Textual Model Mixing Class and Feature Concepts

System reuse and cost are very important in software product line design area. Developers goal is to increase system reuse and decreasing cost and efforts for building components from scratch for each software configuration. This can be reached by developing Software Product Line (SPL). To handle SPL engineering process, several approaches with several techniques were developed. One of these approaches is called separated approach. It requires separating the commonalities and variability for system components to allow configuration selection based on user defined features. Textual notation-based approaches have been used for their formal syntax and semantics to represent system features and implementations. But these approaches are still weak in mixing features (conceptual level) and classes (physical level) that guarantee smooth and automatic configuration generation for software releases. The absence of methodology supporting the mixing process is a real weakness. In this paper, we enhanced SPL reuse by introducing some meta-features, classified according to their functions. As a first consequence, mixing class and feature concepts is supported in a simple way using class interfaces and inherent features for smooth move from feature model to class model. And as a second consequence, the mixing process is supported by a textual design and implementation methodology, mixing class and feature models by combining their concepts in a single language. The supported configuration generation process is simple, coherent, and complete.
