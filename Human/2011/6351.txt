Transparent caching of virtual stubs for improved performance in ubiquitous environments

Context-awareness is an essential requirement for pervasive computing applications, which enables them to adapt and perform tasks based on context. One of the adaptive features of context-awareness is contextual reconfiguration. Contextual reconfiguration involves discovering remote service(s) based on context and binding them to the application components to realize new behaviors, which may be needed to satisfy user needs or to enrich user experience. One of the steps in the reconfiguration process involves a remote lookup to discover the service(s) based on context. This remote lookup process provides the largest contribution to reconfiguration time and this is due to fact that the remote calls are much slower than local calls. Consequently, it affects system performance. In pervasive computing applications, this may turn out to be undesirable in terms of user experience. Moreover, other distributed applications using the network may be affected as every remote method call decreases the amount of bandwidth available on the network. Various systems provide reconfiguration support and offer high-level reconfiguration directives to develop adaptive context-aware applications, but do not address this performance bottleneck. We address this issue and implement seamless caching of virtual stubs within our PCRA1 for improved performance. In this paper we present and describe our transparent caching support and also provide its performance evaluation.
