Strong Backdoors to Bounded Treewidth SAT

There are various approaches to exploiting "hidden structure" in instances of hard combinatorial problems to allow faster algorithms than for general unstructured or random instances. For SAT and its counting version #SAT, hidden structure has been exploited in terms of decomposability and strong backdoor sets. Decomposability can be considered in terms of the treewidth of a graph that is associated with the given CNF formula, for instance by considering clauses and variables as vertices of the graph, and making a variable adjacent with all the clauses it appears in. On the other hand, a strong backdoor set of a CNF formula is a set of variables such that each possible partial assignment to this set moves the formula into a fixed class for which (#)SAT can be solved in polynomial time.
  In this paper we combine the two above approaches. In particular, we study the algorithmic question of finding a small strong backdoor set into the class W_t of CNF formulas whose associated graphs have treewidth at most t. The main results are positive:
  (1) There is a cubic-time algorithm that, given a CNF formula F and two constants k,t\ge 0, either finds a strong W_t-backdoor set of size at most 2^k, or concludes that F has no strong W_t-backdoor set of size at most k.
  (2) There is a cubic-time algorithm that, given a CNF formula F, computes the number of satisfying assignments of F or concludes that sb_t(F)>k, for any pair of constants k,t\ge 0. Here, sb_t(F) denotes the size of a smallest strong W_t-backdoor set of F.
  The significance of our results lies in the fact that they allow us to exploit algorithmically a hidden structure in formulas that is not accessible by any one of the two approaches (decomposability, backdoors) alone. Already a backdoor size 1 on top of treewidth 1 (i.e., sb_1(F)=1) entails formulas of arbitrarily large treewidth and arbitrarily large cycle cutsets.
