Programming errors in traversal programs over structured data

Traversal strategies รก la Stratego (also รก la Strafunski and  'Scrap Your Boilerplate') provide an exceptionally versatile and  uniform means of querying and transforming deeply nested and  heterogeneously structured data including terms in functional   programming and rewriting, objects in OO programming, and XML  documents in XML programming.   However, the resulting traversal programs are prone to programming   errors. We are specifically concerned with errors that go beyond   conservative type errors; examples we examine include divergent   traversals, prematurely terminated traversals, and traversals with dead   code.  Based on an inventory of possible programming errors we   explore options of static typing and static analysis so that some  categories of errors can be avoided. This exploration generates   suggestions for improvements to strategy libraries as well as their underlying   programming languages. Haskell is used for illustrations and  specifications with sufficient explanations to make the presentation   comprehensible to the non-specialist. The overall ideas are   language-agnostic and they are summarized accordingly.
