Revisiting the Complexity of And/Or Graph Solution

This paper presents a study on two data structures that have been used to model several problems in computer science: and/or graphs and x-y graphs. An and/or graph is an acyclic digraph containing a source, such that every vertex v has a label f(v) \in {and,or} and edges represent dependency relations between vertices: a vertex labeled and depends on all of its out-neighbors, while a vertex labeled or depends on only one of its out-neighbors. X-y graphs are defined as a natural generalization of and/or graphs: every vertex vi of an x-y graph has a label xi-yi to mean that vi depends on xi of its yi out-neighbors. We analyze the complexity of the optimization problems Min-and/or and Min-x-y, which consist of finding solution subgraphs of optimal weight for and/or and x-y graphs, respectively. Motivated by the large applicability as well as the hardness of Min-and/or and Min-x-y, we study new complexity aspects of such problems, both from a classical and a parameterized point of view. We prove that Min-and/or remains NP-hard even for a very restricted family of and/or graphs where edges have weight one and or-vertices have out-degree at most two (apart from other property related to some in-degrees), and that deciding whether there is a solution subtree with weight exactly k of a given x-y tree is also NP-hard. We also show that: (i) the parameterized problem Min-and/or(k, r), which asks whether there is a solution subgraph of weight at most k where every or-vertex has at most r out-edges with the same weight, is FPT; (ii) the parameterized problem Min-and/or0(k), whose domain includes and/or graphs allowing zero-weight edges, is W[2]-hard; (iii) the parameterized problem Min-x-y(k) is W[1]-hard.
