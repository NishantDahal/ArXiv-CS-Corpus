Finding Weighted Graphs by Combinatorial Search

We consider the problem of finding edges of a hidden weighted graph using a certain type of queries. Let $G$ be a weighted graph with $n$ vertices. In the most general setting, the $n$ vertices are known and no other information about $G$ is given. The problem is finding all edges of $G$ and their weights using additive queries, where, for an additive query, one chooses a set of vertices and asks the sum of the weights of edges with both ends in the set. This model has been extensively used in bioinformatics including genom sequencing. Extending recent results of Bshouty and Mazzawi, and Choi and Kim, we present a polynomial time randomized algorithm to find the hidden weighted graph $G$ when the number of edges in $G$ is known to be at most $m\geq 2$ and the weight $w(e)$ of each edge $e$ satisfies $\ga \leq |w(e)|\leq \gb$ for fixed constants $\ga, \gb>0$. The query complexity of the algorithm is $O(\frac{m \log n}{\log m})$, which is optimal up to a constant factor.
