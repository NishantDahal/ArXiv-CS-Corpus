Function call overhead benchmarks with MATLAB, Octave, Python, Cython and C

We consider the overhead of function calls in the programming languages MATLAB/Octave, Python, Cython and C. In many applications a function has to be called very often inside a loop. One such application in numerical analysis is the finite element method where integrals have to be computed on each element in a loop. The called functions can often be evaluated efficiently but the function call itself may be time-consuming. We present a benchmark whose goal is to identify and quantify optimization potentials with respect to time consumption caused by function calls in the mentioned programming languages.
