Speeding up the construction of slow adaptive walks

An algorithm (bliss) is proposed to speed up the construction of slow adaptive walks. Slow adaptive walks are adaptive walks biased towards closer points or smaller move steps. They were previously introduced to explore a search space, e.g. to detect potential local optima or to assess the ruggedness of a fitness landscape. To avoid the quadratic cost of computing Hamming distance (HD) for all-pairs of strings in a set in order to find the set of closest strings for each string, strings are sorted and clustered by bliss such that similar strings are more likely to get paired off for HD computation. To efficiently arrange the strings by similarity, bliss employs the idea of shared non-overlapping position specific subsequences between strings which is inspired by an alignment-free protein sequence comparison algorithm. Tests are performed to evaluate the quality of b-walks, i.e. slow adaptive walks constructed from the output of bliss, on enumerated search spaces. Finally, b-walks are applied to explore larger search spaces with the help of Wang-Landau sampling.
