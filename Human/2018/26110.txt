Actor-Relational Database Systems: A Manifesto

Interactive data-intensive applications are becoming ever more pervasive in domains such as finance, web applications, mobile computing, and Internet of Things. Increasingly, these applications are being deployed in sophisticated parallel and distributed hardware infrastructures. With this growing diversity of the software and hardware landscape, there is a pressure on programming models and systems to enable developers to design modular, scalable, efficient, and consistent data-intensive applications. In response to this challenge, recent research has advocated the integration of actor programming models and database management. This integration promises to help developers build logically distributed micro-applications well adapted to modern hardware trends as opposed to existing approaches targeted at optimizing monolithic applications.
  Towards this aim, in this paper we analyze, make the case for, and present a broad vision of actor-relational database systems. We argue why the time is ripe today to examine the research opportunities afforded by this emerging system paradigm. Based on this discussion, we present design principles as well as candidate feature sets to help concretize the vision for such systems. To illustrate the usefulness of the proposed feature set and motivate the need for this class of systems, we show a detailed case study inspired by a smart supermarket application with self-checkout, along with evidence for performance benefits on modern hardware.
