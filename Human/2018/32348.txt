The Complexity of $(Δ+ 1)$Coloring inCongested Clique, Massively Parallel Computation,and Centralized Local Computation

We present new randomized algorithms that improve the complexity of the classic $(Δ+1)$-coloring problem, and its generalization $(Δ+1)$-list-coloring, in three well-studied models of distributed, parallel, and centralized computation:
  Distributed Congested Clique: We present an $O(1)$-round randomized algorithm for $(Δ+1)$-list coloring in the congested clique model of distributed computing. This settles the asymptotic complexity of this problem. It moreover improves upon the $O(\log^\ast Δ)$-round randomized algorithms of Parter and Su [DISC'18] and $O((\log\log Δ)\cdot \log^\ast Δ)$-round randomized algorithm of Parter [ICALP'18].
  Massively Parallel Computation: We present a $(Δ+1)$-list coloring algorithm with round complexity $O(\sqrt{\log\log n})$ in the Massively Parallel Computation (MPC) model with strongly sublinear memory per machine. This algorithm uses a memory of $O(n^α)$ per machine, for any desirable constant $α>0$, and a total memory of $\widetilde{O}(m)$, where $m$ is the size of the graph. Notably, this is the first coloring algorithm with sublogarithmic round complexity, in the sublinear memory regime of MPC. For the quasilinear memory regime of MPC, an $O(1)$-round algorithm was given very recently by Assadi et al. [SODA'19].
  Centralized Local Computation: We show that $(Δ+1)$-list coloring can be solved with $Δ^{O(1)} \cdot O(\log n)$ query complexity, in the centralized local computation model. The previous state-of-the-art for $(Δ+1)$-list coloring in the centralized local computation model are based on simulation of known LOCAL algorithms.
