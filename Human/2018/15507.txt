List-decoding homomorphism codes with arbitrary codomains

The codewords of the homomorphism code $\operatorname{aHom}(G,H)$ are the affine homomorphisms between two finite groups, $G$ and $H$, generalizing Hadamard codes. Following the work of Goldreich--Levin (1989), Grigorescu et al. (2006), Dinur et al. (2008), and Guo and Sudan (2014), we further expand the range of groups for which local list-decoding is possible up to $\textsf{mindist}$, the minimum distance of the code. In particular, for the first time, we do not require either $G$ or $H$ to be solvable. Specifically, we demonstrate a $\operatorname{poly}(1/\varepsilon)$ bound on the list size, i.e., on the number of codewords within distance $(\textsf{mindist}-\varepsilon)$ from any received word, when $G$ is either abelian or an alternating group, and $H$ is an arbitrary (finite or infinite) group. We conjecture that a similar bound holds for all finite simple groups as domains; the alternating groups serve as the first test case.
  The abelian vs. arbitrary result then permits us to adapt previous techniques to obtain efficient local list-decoding for this case. We also obtain efficient local list-decoding for the permutation representations of alternating groups (i.e., when the codomain is a symmetric group $S_m$) under the restriction that the domain $G=A_n$ is paired with codomain $H=S_m$ satisfying $m < 2^{n-1}/\sqrt{n}$.
  The limitations on the codomain in the latter case arise from severe technical difficulties stemming from the need to solve the homomorphism extension (HomExt) problem in certain cases; these are addressed in a separate paper (Wuu 2018).
  However, we also introduce an intermediate "semi-algorithmic" model we call Certificate List-Decoding that bypasses the HomExt bottleneck and works in the alternating vs. arbitrary setting. A certificate list-decoder produces partial homomorphisms that uniquely extend to the homomorphisms in the list.
