A Novel Algorithm for the All-Best-Swap-Edge Problem on Tree Spanners

Given a 2-edge connected, unweighted, and undirected graph $G$ with $n$ vertices and $m$ edges, a $σ$-tree spanner is a spanning tree $T$ of $G$ in which the ratio between the distance in $T$ of any pair of vertices and the corresponding distance in $G$ is upper bounded by $σ$. The minimum value of $σ$ for which $T$ is a $σ$-tree spanner of $G$ is also called the {\em stretch factor} of $T$. We address the fault-tolerant scenario in which each edge $e$ of a given tree spanner may temporarily fail and has to be replaced by a {\em best swap edge}, i.e. an edge that reconnects $T-e$ at a minimum stretch factor. More precisely, we design an $O(n^2)$ time and space algorithm that computes a best swap edge of every tree edge. Previously, an $O(n^2 \log^4 n)$ time and $O(n^2+m\log^2n)$ space algorithm was known for edge-weighted graphs [Bilò et al., ISAAC 2017]. Even if our improvements on both the time and space complexities are of a polylogarithmic factor, we stress the fact that the design of a $o(n^2)$ time and space algorithm would be considered a breakthrough.
