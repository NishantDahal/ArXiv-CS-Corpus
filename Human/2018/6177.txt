A Dynamic Jamming Game for Real-Time Status Updates

We study timely status updates of a real-time system in an adversarial setting. The system samples a physical process, and sends the samples from the source (e.g., a sensor) to the destination (e.g, a control center) through a channel. For real-time monitoring/control tasks, it is crucial for the system to update the status of the physical process "timely". We measure the timeliness of status updates by the time elapsed since the latest update at the destination was generated at the source, and define the time elapsed as age of information, or age in short. To sabotage the system, an attacker aims to maximize the age by jamming the channel and hence causing delay in status updates. The system aims to minimize the age by judiciously choosing when to sample and send the updates. We model the ongoing repeated interaction between the attacker and the system as a dynamic game. In each stage game, the attacker chooses the jamming time according to the jamming time distribution, and the system responds by delaying the sampling according to the sampling policy. We prove that there exists a unique stationary equilibrium in the game, and provide a complete analytical characterization of the equilibrium. Our results shed lights on how the attacker sabotages the system and how the system should defend against the attacker.
