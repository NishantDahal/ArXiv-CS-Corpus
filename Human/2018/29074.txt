A 2/3-Approximation Algorithm for Vertex-weighted Matching in Bipartite Graphs

We consider the maximum vertex-weighted matching problem (MVM), in which non-negative weights are assigned to the vertices of a graph, the weight of a matching is the sum of the weights of the matched vertices, and we are required to compute a matching of maximum weight. We describe an exact algorithm for MVM with $O(|V|\, |E|)$ time complexity, and then we design a $2/3$-approximation algorithm for MVM on bipartite graphs by restricting the length of augmenting paths to at most three. The latter algorithm has time complexity $O(|E| + |V| \log |V|)$.
  The approximation algorithm solves two MVM problems on bipartite graphs, each with weights only on one vertex part, and then finds a matching from these two matchings using the Mendelsohn-Dulmage Theorem. The approximation ratio of the algorithm is obtained by considering failed vertices, i.e., vertices that the approximation algorithm fails to match but the exact algorithm does. We show that at every step of the algorithm there are two distinct heavier vertices that we can charge each failed vertex to.
  We have implemented the $2/3$-approximation algorithm for MVM and compare it with four other algorithms: an exact MEM algorithm, the exact MVM algorithm, a $1/2$-approximation algorithm for MVM, and a scaling-based $(1-Îµ)$-approximation algorithm for MEM. We also show that MVM problems should not be first transformed to MEM problems and solved using exact algorithms for the latter, since this transformation can increase runtimes by several orders of magnitude.
