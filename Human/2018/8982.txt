Bipartitioning Problems on Graphs with Bounded Tree-Width

For an undirected graph G, we consider the following problems: given a fixed graph H, can we partition the vertices of G into two non-empty sets A and B such that neither the induced graph G[A] nor G[B] contain H (i) as a subgraph? (ii) as an induced subgraph? These problems are NP-complete and are expressible in monadic second order logic (MSOL). The MSOL formulation, together with Courcelle's theorem implies linear time solvability on graphs with bounded tree-width. This approach yields algorithms with running time f(|phi|, t) * n, where |phi| is the length of the MSOL formula, t is the tree-width of the graph and n is the number of vertices of the graph. The dependency of f(|phi|, t) on |phi| can be as bad as a tower of exponentials.
  In this paper, we present explicit combinatorial algorithms for these problems for graphs G whose tree-width is bounded. We obtain 2^{O(t^r)} * n time algorithms when H is any fixed graph of order r. In the special case when H = K_r, a complete graph on r vertices, we get an 2^{O(t+r \log t)} * n time algorithm.
  The techniques can be extended to provide FPT algorithms to determine the smallest number q such that V can be partitioned into q parts such that none of the parts have H as a subgraph (induced subgraph).
