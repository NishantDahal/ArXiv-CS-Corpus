Enhancing Byzantine fault tolerance using MD5 checksum and delay variation in Cloud services

Cloud computing management are beyond typical human narratives. However if a virtual system is not effectively designed to tolerate Byzantine faults, it could lead to a faultily executed mission rather than a cloud crash. The cloud could recover from the crash but it could not recover from the loss of credibility. Moreover no amount of replication or fault handling measures can be helpful in facing a Byzantine fault unless the virtual system is designed to detect, tolerate and eliminate such faults. However research efforts that are made to address Byzantine faults have not provided convincing solutions vastly due to their limited capabilities in detecting the Byzantine faults. As a result, in this paper the Cloud system is modeled as a discrete system to determine the virtual system behavior at varying time intervals. A delay variation variable as a measure of deviation for the expected processing delay associated with the virtual nodes takes values from the set of P {low, normal, high, extreme}. Similarly, a check sum error variable which is even computed for intra nodes that have no attachment to TCP/IP stack takes values from the set of P {no error, error}. These conditions are then represented by the occurrence of faulty events that cause specific component mode transition from fail safe to fail-stop or byzantine prone.
