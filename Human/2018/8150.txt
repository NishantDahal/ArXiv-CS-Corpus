Succinct Oblivious RAM

Reducing the database space overhead is critical in big-data processing. In this paper, we revisit oblivious RAM (ORAM) using big-data standard for the database space overhead.
  ORAM is a cryptographic primitive that enables users to perform arbitrary database accesses without revealing the access pattern to the server. It is particularly important today since cloud services become increasingly common making it necessary to protect users' private information from database access pattern analyses. Previous ORAM studies focused mostly on reducing the access overhead. Consequently, the access overhead of the state-of-the-art ORAM constructions is almost at practical levels in certain application scenarios such as secure processors. On the other hand, most existing ORAM constructions require $(1+Î˜(1))n$ (say, $10n$) bits of server space where $n$ is the database size. Though such space complexity is often considered to be "optimal", overhead such as $10 \times$ is prohibitive for big-data applications in practice.
  We propose ORAM constructions that take only $(1+o(1))n$ bits of server space while maintaining state-of-the-art performance in terms of the access overhead and the user space. We also give non-asymptotic analyses and simulation results which indicate that the proposed ORAM constructions are practically effective.
