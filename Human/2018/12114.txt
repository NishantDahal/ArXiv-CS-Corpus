Semiotic internationalization and localization of computer programs

Localization, the process--part of translation studies--of adapting a program to a new linguistic community, is often intended in the relatively narrow sense of translating the messages and labels of the program into the target language. Correspondingly, internationalization, the discipline--which is part of software engineering--of putting in place all the measures that will make localization easier, is also limited in scope.
  In this paper we analyze the various systems through which a program communicates with a person (icons, buttons, actions, interface layout, etc.) and find that most of them, far from being iconic, are in reality symbolic semiotic systems related to the culture in which or for which the program was developed (typically American programmers of western office workers). Based on these findings, we argue that during the localization process, the translator should have the option to translate them all, that is, to adapt the whole interface and its founding metaphors to the cultural environment in which the program is deployed.
  This conclusion will result in a greater role for internationalization in the software development process, and we outline a few architectural principles that should be considered when creating a program for a multi-cultural market.
