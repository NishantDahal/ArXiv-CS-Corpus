On Euclidean Methods for Cubic and Quartic Jacobi Symbols

We study the bit complexity of two methods, related to the Euclidean algorithm, for computing cubic and quartic analogs of the Jacobi symbol. The main bottleneck in such procedures is computation of a quotient for long division. We give examples to show that with standard arithmetic, if quotients are computed naively (by using exact norms as denominators, then rounding), the algorithms have $Î˜(n^3)$ bit complexity. It is a "folk theorem" that this can be reduced to $O(n^2)$ by modifying the division procedure. We give a self-contained proof of this, and show that quadratic time is best possible for these algorithms (with standard arithmetic or not).
  We also address the relative efficiency of using reciprocity, as compared to Euler's criterion, for testing if a given number is a cubic or quartic residue modulo an odd prime. Which is preferable depends on the number of residue tests to be done.
  Finally, we discuss the cubic and quartic analogs of Eisenstein's even-quotient algorithm for computing Jacobi symbols in ${\bf Z}$. Although the quartic algorithm was given by Smith in 1859, the version for cubic symbols seems to be new. As far as we know, neither was analyzed before. We show that both algorithms have exponential worst-case bit complexity. The proof for the cubic algorithm involves a cyclic repetition of four quotients, which may be of independent interest.
