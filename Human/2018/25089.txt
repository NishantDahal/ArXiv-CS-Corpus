Distributed-Memory Forest-of-Octrees Raycasting

We present an MPI-parallel algorithm for the in-situ visualization of computational data that is built around a distributed linear forest-of-octrees data structure. Such octrees are frequently used in element-based numerical simulations; they store the leaves of the tree that are local in the curent parallel partition.
  We proceed in three stages. First, we prune all elements whose bounding box is not visible by a parallel top-down traversal, and repartition the remaining ones for load-balancing. Second, we intersect each element with every ray passing its box to derive color and opacity values for the ray segment. To reduce data, we aggregate the segments up the octree in a strictly distributed fashion in cycles of coarsening and repartition. Third, we composite all remaining ray segments to a tiled partition of the image and write it to disk using parallel I/O.
  The scalability of the method derives from three concepts: By exploiting the space filling curve encoding of the octrees and by relying on recently developed tree algorithms for top-down partition traversal, we are able to determine sender/receiver pairs without handshaking and/or collective communication. Furthermore, by partnering the linear traversal of tree leaves with the group action of the attenuation/emission ODE along each segment, we avoid back-to-front sorting of elements throughout. Lastly, the method is problem adaptive with respect to the refinement and partition of the elements and to the accuracy of ODE integration.
