A General Approach to State Complexity of Operations: Formalization and Limitations

The state complexity of the result of a regular operation is often positively correlated with the number of distinct transformations induced by letters in the minimal deterministic finite automaton of the input languages. That is, more transformations in the inputs means higher state complexity in the output. When this correlation holds, the state complexity of a unary operation can be maximized using languages in which there is one letter corresponding to each possible transformation; for operations of higher arity, we can use $m$-tuples of languages in which there is one letter corresponding to each possible $m$-tuple of transformations. In this way, a small set of languages can be used as witnesses for many common regular operations, eliminating the need to search for witnesses -- though at the expense of using very large alphabets. We formalize this approach and examine its limitations. We define a class of "uniform" operations for which this approach works; the class is closed under composition and includes common operations such as star, concatenation, reversal, union, and complement. Our main result is that the worst-case state complexity of a uniform operation can be determined by considering a finite set of witnesses, and this set depends only on the arity of the operation and the state complexities of the inputs.
