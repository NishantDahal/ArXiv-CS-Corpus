Maintaning maximal matching with lookahead

In this paper we study the problem of fully dynamic maximal matching with lookahead. In a fully dynamic $n$-vertex graph setting, we have to handle updates (insertions and removals of edges), and answer queries regarding the current graph, preferably with a better time bound than that when running the trivial deterministic algorithm with worst-case time of $O(m)$ (where $m$ is the all-time maximum number of the edges) and recompute the matching from scratch each time a query arrives. We show that a maximal matching can be maintained in an (undirected) general graph with a deterministic amortized update cost of $O(\log m)$, provided that a lookahead of length $m$ is available, i.e. we can ``take a peek'' at the next $m$ update operations in advance.
