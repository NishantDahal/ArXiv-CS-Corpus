Deciding the Closure of Inconsistent Rooted Triples is NP-Complete

Interpreting three-leaf binary trees or {\em rooted triples} as constraints yields an entailment relation, whereby binary trees satisfying some rooted triples must also thus satisfy others, and thence a closure operator, which is known to be polynomial-time computable. This is extended to inconsistent triple sets by defining that a triple is entailed by such a set if it is entailed by any consistent subset of it.
  Determining whether the closure of an inconsistent rooted triple set can be computed in polynomial time was posed as an open problem in the Isaac Newton Institute's "Phylogenetics" program in 2007. It appears (as NC4) in a collection of such open problems maintained by Mike Steel, and it is the last of that collection's five problems concerning computational complexity to have remained open. We resolve the complexity of computing this closure, proving that its decision version is NP-Complete.
  In the process, we also prove that detecting the existence of {\em any} acyclic B-hyperpath (from specified source to destination) is NP-Complete, in a significantly narrower special case than the version whose {\em minimization} problem was recently proven NP-hard by Ritz et al. This implies it is NP-hard to approximate (our special case of) their minimization problem to within {\em any} factor.
