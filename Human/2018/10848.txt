Distributed Treewidth Computation

Of all the restricted graph families out there, the family of low treewidth graphs has continuously proven to admit many algorithmic applications. For example, many NP-hard algorithms can be solved in polynomial time on graphs of constant treewidth. Other algorithmic techniques, such as Baker's technique, partition the graph into components of low treewidth. Therefore, computing the treewidth of a graph remains an important problem in algorithm design. For graphs of constant treewidth, linear-time algorithms are known in the classical setting, and well as $\text{polylog}(n)$-time parallel algorithms for computing an $O(1)$-approximation to treewidth. However, nothing is yet known in the distributed setting.
  In this paper, we give near-optimal algorithms for computing the treewidth on a distributed network. We show that for graphs of constant treewidth, an $O(1)$-approximation to the treewidth can be computed in near-optimal $\tilde O(D)$ time, where $D$ is the diameter of the network graph. In addition, we show that many NP-hard problems that are tractable on constant treewidth graphs can also be solved in $\tilde O(D)$ time on a distributed network of constant treewidth.
  Our algorithms make use of the shortcuts framework of Ghaffari and Haeupler [SODA'16], which has proven to be a powerful tool in designing near-optimal distributed algorithms for restricted graph networks, such as planar graphs, low-treewidth graphs, and excluded minor graphs.
