From Centralized to Decentralized Coded Caching

We consider the problem of designing decentralized schemes for coded caching. In this problem there are $K$ users each caching $M$ files out of a library of $N$ total files. The question is to minimize $R$, the number of broadcast transmissions to satisfy all the user demands. Decentralized schemes allow the creation of each cache independently, allowing users to join or leave without dependencies. Previous work showed that to achieve a coding gain $g$, i.e. $R \leq K (1-M/N)/g$ transmissions, each file has to be divided into number of subpackets that is exponential in $g$.
  In this work we propose a simple translation scheme that converts any constant rate centralized scheme into a random decentralized placement scheme that guarantees a target coding gain of $g$. If the file size in the original constant rate centralized scheme is subexponential in $K$, then the file size for the resulting scheme is subexponential in $g$. When new users join, the rest of the system remains the same. However, we require an additional communication overhead of $O(\log K)$ bits to determine the new user's cache state. We also show that the worst-case rate guarantee degrades only by a constant factor due to the dynamics of user arrival and departure.
